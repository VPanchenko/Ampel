//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace FBService {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FinalBuilderServerSoap", Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseUpdateable))]
    public partial class FinalBuilderServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SecureAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastProjectErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectTriggerLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartProjectWithVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAuthenticatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TakeResponsibilityOperationCompleted;
        
        /// <remarks/>
        public FinalBuilderServer() {
            this.Url = "http://ecx-build/fb/Services/FinalBuilderServer.asmx";
        }
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event SecureAuthenticateCompletedEventHandler SecureAuthenticateCompleted;
        
        /// <remarks/>
        public event GetProjectNamesCompletedEventHandler GetProjectNamesCompleted;
        
        /// <remarks/>
        public event GetProjectStatusCompletedEventHandler GetProjectStatusCompleted;
        
        /// <remarks/>
        public event GetLastProjectErrorCompletedEventHandler GetLastProjectErrorCompleted;
        
        /// <remarks/>
        public event GetProjectTriggerLogCompletedEventHandler GetProjectTriggerLogCompleted;
        
        /// <remarks/>
        public event StartProjectCompletedEventHandler StartProjectCompleted;
        
        /// <remarks/>
        public event StartProjectWithVariablesCompletedEventHandler StartProjectWithVariablesCompleted;
        
        /// <remarks/>
        public event StopProjectCompletedEventHandler StopProjectCompleted;
        
        /// <remarks/>
        public event SuspendProjectCompletedEventHandler SuspendProjectCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event UserExistsCompletedEventHandler UserExistsCompleted;
        
        /// <remarks/>
        public event GetProjectsCompletedEventHandler GetProjectsCompleted;
        
        /// <remarks/>
        public event GetProjectVariablesCompletedEventHandler GetProjectVariablesCompleted;
        
        /// <remarks/>
        public event HasPermissionCompletedEventHandler HasPermissionCompleted;
        
        /// <remarks/>
        public event IsAuthenticatedCompletedEventHandler IsAuthenticatedCompleted;
        
        /// <remarks/>
        public event TakeResponsibilityCompletedEventHandler TakeResponsibilityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/Authenticate", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Authenticate(string username, string password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthenticate(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Authenticate", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string username, string password) {
            this.AuthenticateAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string username, string password, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        username,
                        password}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/SecureAuthenticate", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SecureAuthenticate(string username, string password) {
            object[] results = this.Invoke("SecureAuthenticate", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSecureAuthenticate(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SecureAuthenticate", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSecureAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SecureAuthenticateAsync(string username, string password) {
            this.SecureAuthenticateAsync(username, password, null);
        }
        
        /// <remarks/>
        public void SecureAuthenticateAsync(string username, string password, object userState) {
            if ((this.SecureAuthenticateOperationCompleted == null)) {
                this.SecureAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecureAuthenticateOperationCompleted);
            }
            this.InvokeAsync("SecureAuthenticate", new object[] {
                        username,
                        password}, this.SecureAuthenticateOperationCompleted, userState);
        }
        
        private void OnSecureAuthenticateOperationCompleted(object arg) {
            if ((this.SecureAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecureAuthenticateCompleted(this, new SecureAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetProjectNames", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProjectNames(string authenticationToken) {
            object[] results = this.Invoke("GetProjectNames", new object[] {
                        authenticationToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProjectNames(string authenticationToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProjectNames", new object[] {
                        authenticationToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetProjectNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectNamesAsync(string authenticationToken) {
            this.GetProjectNamesAsync(authenticationToken, null);
        }
        
        /// <remarks/>
        public void GetProjectNamesAsync(string authenticationToken, object userState) {
            if ((this.GetProjectNamesOperationCompleted == null)) {
                this.GetProjectNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectNamesOperationCompleted);
            }
            this.InvokeAsync("GetProjectNames", new object[] {
                        authenticationToken}, this.GetProjectNamesOperationCompleted, userState);
        }
        
        private void OnGetProjectNamesOperationCompleted(object arg) {
            if ((this.GetProjectNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectNamesCompleted(this, new GetProjectNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetProjectStatus", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectStatus GetProjectStatus(string authenticationToken, string name) {
            object[] results = this.Invoke("GetProjectStatus", new object[] {
                        authenticationToken,
                        name});
            return ((ProjectStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProjectStatus(string authenticationToken, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProjectStatus", new object[] {
                        authenticationToken,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectStatus EndGetProjectStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectStatusAsync(string authenticationToken, string name) {
            this.GetProjectStatusAsync(authenticationToken, name, null);
        }
        
        /// <remarks/>
        public void GetProjectStatusAsync(string authenticationToken, string name, object userState) {
            if ((this.GetProjectStatusOperationCompleted == null)) {
                this.GetProjectStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectStatusOperationCompleted);
            }
            this.InvokeAsync("GetProjectStatus", new object[] {
                        authenticationToken,
                        name}, this.GetProjectStatusOperationCompleted, userState);
        }
        
        private void OnGetProjectStatusOperationCompleted(object arg) {
            if ((this.GetProjectStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectStatusCompleted(this, new GetProjectStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetLastProjectError", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastProjectError(string authenticationToken, string name) {
            object[] results = this.Invoke("GetLastProjectError", new object[] {
                        authenticationToken,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLastProjectError(string authenticationToken, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLastProjectError", new object[] {
                        authenticationToken,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLastProjectError(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastProjectErrorAsync(string authenticationToken, string name) {
            this.GetLastProjectErrorAsync(authenticationToken, name, null);
        }
        
        /// <remarks/>
        public void GetLastProjectErrorAsync(string authenticationToken, string name, object userState) {
            if ((this.GetLastProjectErrorOperationCompleted == null)) {
                this.GetLastProjectErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastProjectErrorOperationCompleted);
            }
            this.InvokeAsync("GetLastProjectError", new object[] {
                        authenticationToken,
                        name}, this.GetLastProjectErrorOperationCompleted, userState);
        }
        
        private void OnGetLastProjectErrorOperationCompleted(object arg) {
            if ((this.GetLastProjectErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastProjectErrorCompleted(this, new GetLastProjectErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetProjectTriggerLog", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProjectTriggerLog(string authenticationToken, string name) {
            object[] results = this.Invoke("GetProjectTriggerLog", new object[] {
                        authenticationToken,
                        name});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProjectTriggerLog(string authenticationToken, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProjectTriggerLog", new object[] {
                        authenticationToken,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetProjectTriggerLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectTriggerLogAsync(string authenticationToken, string name) {
            this.GetProjectTriggerLogAsync(authenticationToken, name, null);
        }
        
        /// <remarks/>
        public void GetProjectTriggerLogAsync(string authenticationToken, string name, object userState) {
            if ((this.GetProjectTriggerLogOperationCompleted == null)) {
                this.GetProjectTriggerLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectTriggerLogOperationCompleted);
            }
            this.InvokeAsync("GetProjectTriggerLog", new object[] {
                        authenticationToken,
                        name}, this.GetProjectTriggerLogOperationCompleted, userState);
        }
        
        private void OnGetProjectTriggerLogOperationCompleted(object arg) {
            if ((this.GetProjectTriggerLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectTriggerLogCompleted(this, new GetProjectTriggerLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/StartProject", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartProject(string authenticationToken, string name) {
            this.Invoke("StartProject", new object[] {
                        authenticationToken,
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartProject(string authenticationToken, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartProject", new object[] {
                        authenticationToken,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStartProject(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StartProjectAsync(string authenticationToken, string name) {
            this.StartProjectAsync(authenticationToken, name, null);
        }
        
        /// <remarks/>
        public void StartProjectAsync(string authenticationToken, string name, object userState) {
            if ((this.StartProjectOperationCompleted == null)) {
                this.StartProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartProjectOperationCompleted);
            }
            this.InvokeAsync("StartProject", new object[] {
                        authenticationToken,
                        name}, this.StartProjectOperationCompleted, userState);
        }
        
        private void OnStartProjectOperationCompleted(object arg) {
            if ((this.StartProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/StartProjectWithVariables" +
            "", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartProjectWithVariables(string authenticationToken, string name, string[] variables) {
            this.Invoke("StartProjectWithVariables", new object[] {
                        authenticationToken,
                        name,
                        variables});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartProjectWithVariables(string authenticationToken, string name, string[] variables, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartProjectWithVariables", new object[] {
                        authenticationToken,
                        name,
                        variables}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStartProjectWithVariables(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StartProjectWithVariablesAsync(string authenticationToken, string name, string[] variables) {
            this.StartProjectWithVariablesAsync(authenticationToken, name, variables, null);
        }
        
        /// <remarks/>
        public void StartProjectWithVariablesAsync(string authenticationToken, string name, string[] variables, object userState) {
            if ((this.StartProjectWithVariablesOperationCompleted == null)) {
                this.StartProjectWithVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartProjectWithVariablesOperationCompleted);
            }
            this.InvokeAsync("StartProjectWithVariables", new object[] {
                        authenticationToken,
                        name,
                        variables}, this.StartProjectWithVariablesOperationCompleted, userState);
        }
        
        private void OnStartProjectWithVariablesOperationCompleted(object arg) {
            if ((this.StartProjectWithVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartProjectWithVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/StopProject", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopProject(string authenticationToken, string name) {
            this.Invoke("StopProject", new object[] {
                        authenticationToken,
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStopProject(string authenticationToken, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StopProject", new object[] {
                        authenticationToken,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStopProject(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StopProjectAsync(string authenticationToken, string name) {
            this.StopProjectAsync(authenticationToken, name, null);
        }
        
        /// <remarks/>
        public void StopProjectAsync(string authenticationToken, string name, object userState) {
            if ((this.StopProjectOperationCompleted == null)) {
                this.StopProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopProjectOperationCompleted);
            }
            this.InvokeAsync("StopProject", new object[] {
                        authenticationToken,
                        name}, this.StopProjectOperationCompleted, userState);
        }
        
        private void OnStopProjectOperationCompleted(object arg) {
            if ((this.StopProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/SuspendProject", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SuspendProject(string authenticationToken, string name, int minutes, string reason) {
            this.Invoke("SuspendProject", new object[] {
                        authenticationToken,
                        name,
                        minutes,
                        reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendProject(string authenticationToken, string name, int minutes, string reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendProject", new object[] {
                        authenticationToken,
                        name,
                        minutes,
                        reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSuspendProject(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SuspendProjectAsync(string authenticationToken, string name, int minutes, string reason) {
            this.SuspendProjectAsync(authenticationToken, name, minutes, reason, null);
        }
        
        /// <remarks/>
        public void SuspendProjectAsync(string authenticationToken, string name, int minutes, string reason, object userState) {
            if ((this.SuspendProjectOperationCompleted == null)) {
                this.SuspendProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendProjectOperationCompleted);
            }
            this.InvokeAsync("SuspendProject", new object[] {
                        authenticationToken,
                        name,
                        minutes,
                        reason}, this.SuspendProjectOperationCompleted, userState);
        }
        
        private void OnSuspendProjectOperationCompleted(object arg) {
            if ((this.SuspendProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/CreateUser", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateUser(string authenticationToken, string username, string password, string name, string email, string[] roles) {
            this.Invoke("CreateUser", new object[] {
                        authenticationToken,
                        username,
                        password,
                        name,
                        email,
                        roles});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateUser(string authenticationToken, string username, string password, string name, string email, string[] roles, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateUser", new object[] {
                        authenticationToken,
                        username,
                        password,
                        name,
                        email,
                        roles}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string authenticationToken, string username, string password, string name, string email, string[] roles) {
            this.CreateUserAsync(authenticationToken, username, password, name, email, roles, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string authenticationToken, string username, string password, string name, string email, string[] roles, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        authenticationToken,
                        username,
                        password,
                        name,
                        email,
                        roles}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/UserExists", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserExists(string authenticationToken, string username) {
            object[] results = this.Invoke("UserExists", new object[] {
                        authenticationToken,
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserExists(string authenticationToken, string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserExists", new object[] {
                        authenticationToken,
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUserExists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserExistsAsync(string authenticationToken, string username) {
            this.UserExistsAsync(authenticationToken, username, null);
        }
        
        /// <remarks/>
        public void UserExistsAsync(string authenticationToken, string username, object userState) {
            if ((this.UserExistsOperationCompleted == null)) {
                this.UserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserExistsOperationCompleted);
            }
            this.InvokeAsync("UserExists", new object[] {
                        authenticationToken,
                        username}, this.UserExistsOperationCompleted, userState);
        }
        
        private void OnUserExistsOperationCompleted(object arg) {
            if ((this.UserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetProjects", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectInformation[] GetProjects(string authenticationToken) {
            object[] results = this.Invoke("GetProjects", new object[] {
                        authenticationToken});
            return ((ProjectInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProjects(string authenticationToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProjects", new object[] {
                        authenticationToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectInformation[] EndGetProjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsAsync(string authenticationToken) {
            this.GetProjectsAsync(authenticationToken, null);
        }
        
        /// <remarks/>
        public void GetProjectsAsync(string authenticationToken, object userState) {
            if ((this.GetProjectsOperationCompleted == null)) {
                this.GetProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsOperationCompleted);
            }
            this.InvokeAsync("GetProjects", new object[] {
                        authenticationToken}, this.GetProjectsOperationCompleted, userState);
        }
        
        private void OnGetProjectsOperationCompleted(object arg) {
            if ((this.GetProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/GetProjectVariables", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VariableDef[] GetProjectVariables(string authenticationToken, string projectName) {
            object[] results = this.Invoke("GetProjectVariables", new object[] {
                        authenticationToken,
                        projectName});
            return ((VariableDef[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProjectVariables(string authenticationToken, string projectName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProjectVariables", new object[] {
                        authenticationToken,
                        projectName}, callback, asyncState);
        }
        
        /// <remarks/>
        public VariableDef[] EndGetProjectVariables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VariableDef[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectVariablesAsync(string authenticationToken, string projectName) {
            this.GetProjectVariablesAsync(authenticationToken, projectName, null);
        }
        
        /// <remarks/>
        public void GetProjectVariablesAsync(string authenticationToken, string projectName, object userState) {
            if ((this.GetProjectVariablesOperationCompleted == null)) {
                this.GetProjectVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectVariablesOperationCompleted);
            }
            this.InvokeAsync("GetProjectVariables", new object[] {
                        authenticationToken,
                        projectName}, this.GetProjectVariablesOperationCompleted, userState);
        }
        
        private void OnGetProjectVariablesOperationCompleted(object arg) {
            if ((this.GetProjectVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectVariablesCompleted(this, new GetProjectVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/HasPermission", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasPermission(string authenticationToken, Permission permission) {
            object[] results = this.Invoke("HasPermission", new object[] {
                        authenticationToken,
                        permission});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasPermission(string authenticationToken, Permission permission, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasPermission", new object[] {
                        authenticationToken,
                        permission}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasPermission(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasPermissionAsync(string authenticationToken, Permission permission) {
            this.HasPermissionAsync(authenticationToken, permission, null);
        }
        
        /// <remarks/>
        public void HasPermissionAsync(string authenticationToken, Permission permission, object userState) {
            if ((this.HasPermissionOperationCompleted == null)) {
                this.HasPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPermissionOperationCompleted);
            }
            this.InvokeAsync("HasPermission", new object[] {
                        authenticationToken,
                        permission}, this.HasPermissionOperationCompleted, userState);
        }
        
        private void OnHasPermissionOperationCompleted(object arg) {
            if ((this.HasPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPermissionCompleted(this, new HasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/IsAuthenticated", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAuthenticated(string authenticationToken) {
            object[] results = this.Invoke("IsAuthenticated", new object[] {
                        authenticationToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsAuthenticated(string authenticationToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsAuthenticated", new object[] {
                        authenticationToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsAuthenticated(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string authenticationToken) {
            this.IsAuthenticatedAsync(authenticationToken, null);
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string authenticationToken, object userState) {
            if ((this.IsAuthenticatedOperationCompleted == null)) {
                this.IsAuthenticatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAuthenticatedOperationCompleted);
            }
            this.InvokeAsync("IsAuthenticated", new object[] {
                        authenticationToken}, this.IsAuthenticatedOperationCompleted, userState);
        }
        
        private void OnIsAuthenticatedOperationCompleted(object arg) {
            if ((this.IsAuthenticatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAuthenticatedCompleted(this, new IsAuthenticatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.finalbuilder.com/FinalBuilderServer/Services/TakeResponsibility", RequestNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", ResponseNamespace="http://www.finalbuilder.com/FinalBuilderServer/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TakeResponsibility(string authenticationToken, string projectName, string comment) {
            this.Invoke("TakeResponsibility", new object[] {
                        authenticationToken,
                        projectName,
                        comment});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTakeResponsibility(string authenticationToken, string projectName, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TakeResponsibility", new object[] {
                        authenticationToken,
                        projectName,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndTakeResponsibility(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void TakeResponsibilityAsync(string authenticationToken, string projectName, string comment) {
            this.TakeResponsibilityAsync(authenticationToken, projectName, comment, null);
        }
        
        /// <remarks/>
        public void TakeResponsibilityAsync(string authenticationToken, string projectName, string comment, object userState) {
            if ((this.TakeResponsibilityOperationCompleted == null)) {
                this.TakeResponsibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakeResponsibilityOperationCompleted);
            }
            this.InvokeAsync("TakeResponsibility", new object[] {
                        authenticationToken,
                        projectName,
                        comment}, this.TakeResponsibilityOperationCompleted, userState);
        }
        
        private void OnTakeResponsibilityOperationCompleted(object arg) {
            if ((this.TakeResponsibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TakeResponsibilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public enum ProjectStatus {
        
        /// <remarks/>
        NeverRun,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        ConfigurationError,
        
        /// <remarks/>
        Stopping,
        
        /// <remarks/>
        Terminating,
        
        /// <remarks/>
        Terminated,
        
        /// <remarks/>
        Suspended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public partial class ProjectInformation {
        
        private string nameField;
        
        private string groupField;
        
        private bool isQueuedField;
        
        private bool isSuspendedField;
        
        private string latestBuildStartedByField;
        
        private ProjectStatus statusField;
        
        private string latestStatusMessageField;
        
        private string responsibleUserNameField;
        
        private string responsibleUserCommentField;
        
        private System.Nullable<System.DateTime> queuedStartTimeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public bool IsQueued {
            get {
                return this.isQueuedField;
            }
            set {
                this.isQueuedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuspended {
            get {
                return this.isSuspendedField;
            }
            set {
                this.isSuspendedField = value;
            }
        }
        
        /// <remarks/>
        public string LatestBuildStartedBy {
            get {
                return this.latestBuildStartedByField;
            }
            set {
                this.latestBuildStartedByField = value;
            }
        }
        
        /// <remarks/>
        public ProjectStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string LatestStatusMessage {
            get {
                return this.latestStatusMessageField;
            }
            set {
                this.latestStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleUserName {
            get {
                return this.responsibleUserNameField;
            }
            set {
                this.responsibleUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleUserComment {
            get {
                return this.responsibleUserCommentField;
            }
            set {
                this.responsibleUserCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> QueuedStartTime {
            get {
                return this.queuedStartTimeField;
            }
            set {
                this.queuedStartTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VariablePrompt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VariableDef))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public abstract partial class BaseUpdateable {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public partial class VariablePrompt : BaseUpdateable {
        
        private VariablePromptType promptTypeField;
        
        private string valuesField;
        
        /// <remarks/>
        public VariablePromptType PromptType {
            get {
                return this.promptTypeField;
            }
            set {
                this.promptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public enum VariablePromptType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Memo,
        
        /// <remarks/>
        DropDownList,
        
        /// <remarks/>
        CheckBox,
        
        /// <remarks/>
        Password,
        
        /// <remarks/>
        CheckBoxList,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public partial class VariableDef : BaseUpdateable {
        
        private string nameField;
        
        private string valueField;
        
        private bool isActiveField;
        
        private VariablePrompt promptField;
        
        private SpecialVariableType specialVariableField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public VariablePrompt Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        public SpecialVariableType SpecialVariable {
            get {
                return this.specialVariableField;
            }
            set {
                this.specialVariableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public enum SpecialVariableType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        CurrentBuildID,
        
        /// <remarks/>
        LastBuildSucceeded,
        
        /// <remarks/>
        LastBuildFailed,
        
        /// <remarks/>
        BuildStartedBy,
        
        /// <remarks/>
        TriggerFileNames,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.finalbuilder.com/FinalBuilderServer/Services")]
    public enum Permission {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        CreateUsers,
        
        /// <remarks/>
        DeleteUsers,
        
        /// <remarks/>
        ModifyUsers,
        
        /// <remarks/>
        CreateRoles,
        
        /// <remarks/>
        DeleteRoles,
        
        /// <remarks/>
        ModifyRoles,
        
        /// <remarks/>
        AssignRoles,
        
        /// <remarks/>
        CreateProjects,
        
        /// <remarks/>
        DeleteProjects,
        
        /// <remarks/>
        ModifyProjects,
        
        /// <remarks/>
        DefineVariable,
        
        /// <remarks/>
        UndefineVariable,
        
        /// <remarks/>
        ModifyDefinedVariables,
        
        /// <remarks/>
        ModifyProjectAccess,
        
        /// <remarks/>
        CreateProjectsNotifications,
        
        /// <remarks/>
        DeleteProjectNotifications,
        
        /// <remarks/>
        ModifyProjectNotifications,
        
        /// <remarks/>
        ModifyProjectNotificationTemplates,
        
        /// <remarks/>
        CreateTriggers,
        
        /// <remarks/>
        DeleteTriggers,
        
        /// <remarks/>
        ModifyTriggers,
        
        /// <remarks/>
        CreateConditions,
        
        /// <remarks/>
        DeleteConditions,
        
        /// <remarks/>
        ModifyConditions,
        
        /// <remarks/>
        ClearBuildQueue,
        
        /// <remarks/>
        RemoveBuildQueueItems,
        
        /// <remarks/>
        SuspendProjects,
        
        /// <remarks/>
        ResumeSuspendedProjects,
        
        /// <remarks/>
        UploadProjectFiles,
        
        /// <remarks/>
        DownloadProjectFiles,
        
        /// <remarks/>
        DeleteProjectFiles,
        
        /// <remarks/>
        SetUserResponsibleForFailedProject,
        
        /// <remarks/>
        TakeResponsibilityForFailedProject,
        
        /// <remarks/>
        ViewLicenses,
        
        /// <remarks/>
        RemoveLicenses,
        
        /// <remarks/>
        DownloadLicenses,
        
        /// <remarks/>
        ConfigureSMTP,
        
        /// <remarks/>
        ConfigureAppearance,
        
        /// <remarks/>
        ConfigureGlobalNotificationTemplates,
        
        /// <remarks/>
        ConfigureGlobalProjectSettings,
        
        /// <remarks/>
        ViewOrClearApplicationLog,
        
        /// <remarks/>
        StartProjects,
        
        /// <remarks/>
        StopProjects,
        
        /// <remarks/>
        DeleteProjectHistory,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SecureAuthenticateCompletedEventHandler(object sender, SecureAuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecureAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SecureAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetProjectNamesCompletedEventHandler(object sender, GetProjectNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetProjectStatusCompletedEventHandler(object sender, GetProjectStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetLastProjectErrorCompletedEventHandler(object sender, GetLastProjectErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastProjectErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastProjectErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetProjectTriggerLogCompletedEventHandler(object sender, GetProjectTriggerLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectTriggerLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectTriggerLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void StartProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void StartProjectWithVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void StopProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SuspendProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreateUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UserExistsCompletedEventHandler(object sender, UserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetProjectsCompletedEventHandler(object sender, GetProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetProjectVariablesCompletedEventHandler(object sender, GetProjectVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VariableDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VariableDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void HasPermissionCompletedEventHandler(object sender, HasPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsAuthenticatedCompletedEventHandler(object sender, IsAuthenticatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAuthenticatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAuthenticatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void TakeResponsibilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
